-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calcResidual is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    LinearRegression_settings_chosenRofPhi_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_settings_chosenRofZ_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_HTParameter_qOverPt_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_HTParameter_phiT_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_HTParameter_cotTheta_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_HTParameter_zT_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_LRParameter_qOverPt_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_LRParameter_phiT_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_LRParameter_cotTheta_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_LRParameter_zT_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_stubMap_size_read : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_stubMap_data_first_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    LinearRegression_stubMap_data_first_ce0 : OUT STD_LOGIC;
    LinearRegression_stubMap_data_first_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_stubMap_data_second_size_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    LinearRegression_stubMap_data_second_size_s_ce0 : OUT STD_LOGIC;
    LinearRegression_stubMap_data_second_size_s_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_stubMap_data_second_data_r_s_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_stubMap_data_second_data_r_s_ce0 : OUT STD_LOGIC;
    LinearRegression_stubMap_data_second_data_r_s_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_stubMap_data_second_data_phi_s_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_stubMap_data_second_data_phi_s_ce0 : OUT STD_LOGIC;
    LinearRegression_stubMap_data_second_data_phi_s_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_stubMap_data_second_data_z_s_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_stubMap_data_second_data_z_s_ce0 : OUT STD_LOGIC;
    LinearRegression_stubMap_data_second_data_z_s_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_stubMap_data_second_data_psModule_s_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_stubMap_data_second_data_psModule_s_ce0 : OUT STD_LOGIC;
    LinearRegression_stubMap_data_second_data_psModule_s_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    LinearRegression_stubMap_data_second_data_barrel_s_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_stubMap_data_second_data_barrel_s_ce0 : OUT STD_LOGIC;
    LinearRegression_stubMap_data_second_data_barrel_s_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    LinearRegression_residuals_data_first_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    LinearRegression_residuals_data_first_ce0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_first_we0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_first_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_first_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_size_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    LinearRegression_residuals_data_second_size_s_ce0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_size_s_we0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_size_s_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_size_s_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_phi_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_phi_ce0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_phi_we0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_phi_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_phi_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_phi_ce1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_phi_we1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_phi_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_z_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_z_ce0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_z_we0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_z_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_z_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_z_ce1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_z_we1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_z_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_layerId_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_layerId_ce0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_layerId_we0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_layerId_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_layerId_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_layerId_ce1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_layerId_we1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_layerId_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_stubId_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_stubId_ce0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_stubId_we0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_stubId_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_stubId_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_stubId_ce1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_stubId_we1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_stubId_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    LinearRegression_residuals_data_second_data_ps_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_ps_ce0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_ps_we0 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_ps_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    LinearRegression_residuals_data_second_data_ps_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    LinearRegression_residuals_data_second_data_ps_ce1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_ps_we1 : OUT STD_LOGIC;
    LinearRegression_residuals_data_second_data_ps_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of calcResidual is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (101 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (101 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (101 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (101 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (101 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (101 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (101 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (101 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (101 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (101 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (101 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (101 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_3E22F983 : STD_LOGIC_VECTOR (31 downto 0) := "00111110001000101111100110000011";
    constant ap_const_lv32_40C90FDB : STD_LOGIC_VECTOR (31 downto 0) := "01000000110010010000111111011011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_40200000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000001000000000000000000000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_40490FDB : STD_LOGIC_VECTOR (31 downto 0) := "01000000010010010000111111011011";
    constant ap_const_lv64_3F50624DD2F1A9FC : STD_LOGIC_VECTOR (63 downto 0) := "0011111101010000011000100100110111010010111100011010100111111100";
    constant ap_const_lv64_3FB1EB851EB851EC : STD_LOGIC_VECTOR (63 downto 0) := "0011111110110001111010111000010100011110101110000101000111101100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_1057_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_fu_1062_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1142 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1067_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1072_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1154 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1077_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1160 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal grp_fu_1105_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1166 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal resid_ps_reg_2180 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_assign_3_fu_1223_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_3_reg_2086 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_634_fu_1266_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_634_reg_2091 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal LinearRegression_stu_417_reg_2096 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_rec1_fu_1277_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_rec1_reg_2104 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal LinearRegression_stu_419_reg_2114 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_i_fu_1283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_2119 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_7_reg_2123 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal stubId_fu_1312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal stubId_reg_2159 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal LinearRegression_stu_428_reg_2185 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1081_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_reg_2189 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1085_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_reg_2194 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_151_reg_2199 : STD_LOGIC_VECTOR (31 downto 0);
    signal zResid_reg_2204 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i_i_fu_1421_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i_i_reg_2211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal phiResid_fu_1532_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal phiResid_reg_2216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal resid_z_2_fu_1650_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal resid_z_2_reg_2223 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_fu_1120_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_155_reg_2229 : STD_LOGIC_VECTOR (63 downto 0);
    signal resid_layerId_reg_2234 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal grp_fu_1101_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal resid_phi_reg_2241 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1095_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal resid_z_1_reg_2246 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal tmp_160_reg_2251 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal tmp_158_reg_2256 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal tmp_i9_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i9_reg_2261 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal i_10_fu_1662_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_10_reg_2265 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_161_fu_1673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_161_reg_2278 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal i_fu_1678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_2282 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_165_fu_1689_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal b_data_phi_assign_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_phi_assign_l_reg_2303 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal b_data_z_assign_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_z_assign_loa_reg_2308 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_layerId_assi_12_reg_2313 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_12_reg_2318 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_reg_2323 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_phi_assign_l_1_reg_2328 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_z_assign_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_z_assign_loa_1_reg_2333 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_layerId_assi_13_reg_2338 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_13_reg_2343 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_1_reg_2348 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_l_2_reg_2353 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal b_data_z_assign_loa_2_reg_2358 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_14_reg_2363 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_14_reg_2368 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_2_reg_2373 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_l_3_reg_2378 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_z_assign_loa_3_reg_2383 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_15_reg_2388 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_15_reg_2393 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_3_reg_2398 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_l_4_reg_2403 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal b_data_z_assign_loa_4_reg_2408 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_16_reg_2413 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_16_reg_2418 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_4_reg_2423 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_l_5_reg_2428 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_z_assign_loa_5_reg_2433 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_17_reg_2438 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_17_reg_2443 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_5_reg_2448 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_l_6_reg_2453 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal b_data_z_assign_loa_6_reg_2458 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_18_reg_2463 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_18_reg_2468 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_6_reg_2473 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_l_7_reg_2478 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_z_assign_loa_7_reg_2483 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_19_reg_2488 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_19_reg_2493 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_7_reg_2498 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_l_8_reg_2503 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal b_data_z_assign_loa_8_reg_2508 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_20_reg_2513 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_20_reg_2518 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_8_reg_2523 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_phi_assign_l_9_reg_2528 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_z_assign_loa_9_reg_2533 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_data_layerId_assi_21_reg_2538 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_stubId_assig_21_reg_2543 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_data_ps_assign_lo_9_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_663_fu_1720_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_663_reg_2553 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal tmp_664_fu_1724_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_664_reg_2558 : STD_LOGIC_VECTOR (8 downto 0);
    signal LinearRegression_res_20_reg_2563 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_data_phi_assign_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_phi_assign_ce0 : STD_LOGIC;
    signal b_data_phi_assign_we0 : STD_LOGIC;
    signal b_data_phi_assign_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_phi_assign_ce1 : STD_LOGIC;
    signal b_data_z_assign_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_z_assign_ce0 : STD_LOGIC;
    signal b_data_z_assign_we0 : STD_LOGIC;
    signal b_data_z_assign_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_z_assign_ce1 : STD_LOGIC;
    signal b_data_layerId_assi_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_layerId_assi_ce0 : STD_LOGIC;
    signal b_data_layerId_assi_we0 : STD_LOGIC;
    signal b_data_layerId_assi_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_layerId_assi_ce1 : STD_LOGIC;
    signal b_data_stubId_assig_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_stubId_assig_ce0 : STD_LOGIC;
    signal b_data_stubId_assig_we0 : STD_LOGIC;
    signal b_data_stubId_assig_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_stubId_assig_ce1 : STD_LOGIC;
    signal b_data_ps_assign_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_ps_assign_ce0 : STD_LOGIC;
    signal b_data_ps_assign_we0 : STD_LOGIC;
    signal b_data_ps_assign_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_data_ps_assign_ce1 : STD_LOGIC;
    signal grp_push_back_fu_977_ap_start : STD_LOGIC;
    signal grp_push_back_fu_977_ap_done : STD_LOGIC;
    signal grp_push_back_fu_977_ap_idle : STD_LOGIC;
    signal grp_push_back_fu_977_ap_ready : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_ce0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_we0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_ce0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_we0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we0 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we1 : STD_LOGIC;
    signal grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_push_back_fu_977_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal p_begin_0_rec_reg_888 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_140_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal resid_stubId_reg_899 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_phi_mux_tmp_156_phi_fu_915_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_156_reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal resid_z_reg_922 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal i_i_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal grp_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal tmp_164_reg_956 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_167_fu_1704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_pn_in_i_reg_967 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal ap_predicate_op559_call_state100 : BOOLEAN;
    signal ap_block_state100_on_subcall_done : BOOLEAN;
    signal grp_push_back_fu_977_ap_start_reg : STD_LOGIC := '0';
    signal p_begin_0_rec_cast_fu_1236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_644_cast_fu_1298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i4_fu_1668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_162_fu_1684_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_166_fu_1695_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_pn_i_fu_1715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_648_cast_fu_1758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal arrayHLS_size_write_fu_1767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1057_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1057_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_fu_1062_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1062_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1067_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1067_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1072_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1072_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1077_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1077_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_fu_1095_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1095_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal grp_fu_1101_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1105_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_assign_fu_1591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1109_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1115_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i_i_i_fu_1370_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i_i_i5_fu_1481_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal LinearRegression_HTP_fu_1171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1175_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_653_fu_1185_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_169_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_neg_i1_fu_1213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_171_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_fu_1219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_654_fu_1242_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_655_fu_1254_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_fu_1246_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_1258_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_656_fu_1289_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_635_fu_1293_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_153_to_int_fu_1318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_172_fu_1322_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_657_fu_1332_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs6_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_174_fu_1348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_neg_i_i_i_fu_1360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_176_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_fu_1366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i_i_i_to_int_fu_1379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_177_fu_1383_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_658_fu_1393_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs7_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_179_fu_1409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_to_int_fu_1429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_182_fu_1433_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_659_fu_1443_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs8_fu_1453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_1447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_184_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_neg_i_i_i3_fu_1471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_186_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i4_fu_1477_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i_i_i5_to_int_fu_1490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_187_fu_1494_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_660_fu_1504_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs9_fu_1514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_1508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_189_fu_1520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_i_i10_to_int_fu_1540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_192_fu_1543_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_661_fu_1553_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_1557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_194_fu_1569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_neg_i_fu_1581_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_196_fu_1575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_42_fu_1587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zResid_to_int_fu_1599_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_197_fu_1602_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_662_fu_1612_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs2_fu_1622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs6_fu_1616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_199_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_neg_i2_fu_1640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_201_fu_1634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_fu_1646_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl4_cast_fu_1728_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl5_cast_fu_1735_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_665_fu_1748_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_636_fu_1742_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_637_fu_1752_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1067_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1072_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (101 downto 0);

    component push_back IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_size_read : IN STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_first_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_first_ce0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_first_we0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_first_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_ce0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_we0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we0 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we1 : OUT STD_LOGIC;
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        value_first_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read33 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read41 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read42 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read43 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read44 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read45 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read46 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read47 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read48 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read49 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read50 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read51 : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LRupdateHLS_fsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LRupdateHLS_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LRupdateHLS_fdiv_32ns_32ns_32_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LRupdateHLS_fptrunc_64ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LRupdateHLS_fpext_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component LRupdateHLS_fcmp_32ns_32ns_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component LRupdateHLS_ddiv_64ns_64ns_64_17_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component initFit_b_data_settings_ch IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component initFit_b_data_settings_mi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    b_data_phi_assign_U : component initFit_b_data_settings_ch
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_data_phi_assign_address0,
        ce0 => b_data_phi_assign_ce0,
        we0 => b_data_phi_assign_we0,
        d0 => ap_const_lv32_0,
        q0 => b_data_phi_assign_q0,
        address1 => b_data_phi_assign_address1,
        ce1 => b_data_phi_assign_ce1,
        q1 => b_data_phi_assign_q1);

    b_data_z_assign_U : component initFit_b_data_settings_ch
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_data_z_assign_address0,
        ce0 => b_data_z_assign_ce0,
        we0 => b_data_z_assign_we0,
        d0 => ap_const_lv32_0,
        q0 => b_data_z_assign_q0,
        address1 => b_data_z_assign_address1,
        ce1 => b_data_z_assign_ce1,
        q1 => b_data_z_assign_q1);

    b_data_layerId_assi_U : component initFit_b_data_settings_mi
    generic map (
        DataWidth => 1,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_data_layerId_assi_address0,
        ce0 => b_data_layerId_assi_ce0,
        we0 => b_data_layerId_assi_we0,
        d0 => ap_const_lv1_0,
        q0 => b_data_layerId_assi_q0,
        address1 => b_data_layerId_assi_address1,
        ce1 => b_data_layerId_assi_ce1,
        q1 => b_data_layerId_assi_q1);

    b_data_stubId_assig_U : component initFit_b_data_settings_mi
    generic map (
        DataWidth => 1,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_data_stubId_assig_address0,
        ce0 => b_data_stubId_assig_ce0,
        we0 => b_data_stubId_assig_we0,
        d0 => ap_const_lv1_0,
        q0 => b_data_stubId_assig_q0,
        address1 => b_data_stubId_assig_address1,
        ce1 => b_data_stubId_assig_ce1,
        q1 => b_data_stubId_assig_q1);

    b_data_ps_assign_U : component initFit_b_data_settings_mi
    generic map (
        DataWidth => 1,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_data_ps_assign_address0,
        ce0 => b_data_ps_assign_ce0,
        we0 => b_data_ps_assign_we0,
        d0 => ap_const_lv1_0,
        q0 => b_data_ps_assign_q0,
        address1 => b_data_ps_assign_address1,
        ce1 => b_data_ps_assign_ce1,
        q1 => b_data_ps_assign_q1);

    grp_push_back_fu_977 : component push_back
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_push_back_fu_977_ap_start,
        ap_done => grp_push_back_fu_977_ap_done,
        ap_idle => grp_push_back_fu_977_ap_idle,
        ap_ready => grp_push_back_fu_977_ap_ready,
        mapHLS_unsigned_int_arrayHLS_residData_size_read => temp_7_reg_2123,
        mapHLS_unsigned_int_arrayHLS_residData_data_first_address0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_address0,
        mapHLS_unsigned_int_arrayHLS_residData_data_first_ce0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_ce0,
        mapHLS_unsigned_int_arrayHLS_residData_data_first_we0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_we0,
        mapHLS_unsigned_int_arrayHLS_residData_data_first_d0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_d0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_address0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_address0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_ce0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_ce0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_we0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_we0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_d0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_d0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d0 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d0,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we1,
        mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d1 => grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d1,
        value_first_read => resid_layerId_reg_2234,
        p_read1 => b_data_phi_assign_l_reg_2303,
        p_read3 => b_data_phi_assign_l_1_reg_2328,
        p_read4 => b_data_phi_assign_l_2_reg_2353,
        p_read5 => b_data_phi_assign_l_3_reg_2378,
        p_read6 => b_data_phi_assign_l_4_reg_2403,
        p_read7 => b_data_phi_assign_l_5_reg_2428,
        p_read8 => b_data_phi_assign_l_6_reg_2453,
        p_read9 => b_data_phi_assign_l_7_reg_2478,
        p_read10 => b_data_phi_assign_l_8_reg_2503,
        p_read11 => b_data_phi_assign_l_9_reg_2528,
        p_read12 => b_data_z_assign_loa_reg_2308,
        p_read13 => b_data_z_assign_loa_1_reg_2333,
        p_read14 => b_data_z_assign_loa_2_reg_2358,
        p_read15 => b_data_z_assign_loa_3_reg_2383,
        p_read16 => b_data_z_assign_loa_4_reg_2408,
        p_read17 => b_data_z_assign_loa_5_reg_2433,
        p_read18 => b_data_z_assign_loa_6_reg_2458,
        p_read19 => b_data_z_assign_loa_7_reg_2483,
        p_read20 => b_data_z_assign_loa_8_reg_2508,
        p_read21 => b_data_z_assign_loa_9_reg_2533,
        p_read22 => b_data_layerId_assi_12_reg_2313,
        p_read23 => b_data_layerId_assi_13_reg_2338,
        p_read24 => b_data_layerId_assi_14_reg_2363,
        p_read25 => b_data_layerId_assi_15_reg_2388,
        p_read26 => b_data_layerId_assi_16_reg_2413,
        p_read27 => b_data_layerId_assi_17_reg_2438,
        p_read28 => b_data_layerId_assi_18_reg_2463,
        p_read29 => b_data_layerId_assi_19_reg_2488,
        p_read30 => b_data_layerId_assi_20_reg_2513,
        p_read31 => b_data_layerId_assi_21_reg_2538,
        p_read32 => b_data_stubId_assig_12_reg_2318,
        p_read33 => b_data_stubId_assig_13_reg_2343,
        p_read34 => b_data_stubId_assig_14_reg_2368,
        p_read35 => b_data_stubId_assig_15_reg_2393,
        p_read36 => b_data_stubId_assig_16_reg_2418,
        p_read37 => b_data_stubId_assig_17_reg_2443,
        p_read38 => b_data_stubId_assig_18_reg_2468,
        p_read39 => b_data_stubId_assig_19_reg_2493,
        p_read40 => b_data_stubId_assig_20_reg_2518,
        p_read41 => b_data_stubId_assig_21_reg_2543,
        p_read42 => b_data_ps_assign_lo_reg_2323,
        p_read43 => b_data_ps_assign_lo_1_reg_2348,
        p_read44 => b_data_ps_assign_lo_2_reg_2373,
        p_read45 => b_data_ps_assign_lo_3_reg_2398,
        p_read46 => b_data_ps_assign_lo_4_reg_2423,
        p_read47 => b_data_ps_assign_lo_5_reg_2448,
        p_read48 => b_data_ps_assign_lo_6_reg_2473,
        p_read49 => b_data_ps_assign_lo_7_reg_2498,
        p_read50 => b_data_ps_assign_lo_8_reg_2523,
        p_read51 => b_data_ps_assign_lo_9_reg_2548,
        ap_return => grp_push_back_fu_977_ap_return);

    LRupdateHLS_fsub_32ns_32ns_32_4_full_dsp_1_U299 : component LRupdateHLS_fsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1057_p0,
        din1 => grp_fu_1057_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1057_p2);

    LRupdateHLS_fsub_32ns_32ns_32_4_full_dsp_1_U300 : component LRupdateHLS_fsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1062_p0,
        din1 => grp_fu_1062_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1062_p2);

    LRupdateHLS_faddfsub_32ns_32ns_32_4_full_dsp_1_U301 : component LRupdateHLS_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1067_p0,
        din1 => grp_fu_1067_p1,
        opcode => grp_fu_1067_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_1067_p2);

    LRupdateHLS_faddfsub_32ns_32ns_32_4_full_dsp_1_U302 : component LRupdateHLS_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1072_p0,
        din1 => grp_fu_1072_p1,
        opcode => grp_fu_1072_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_1072_p2);

    LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1_U303 : component LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1077_p0,
        din1 => grp_fu_1077_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1077_p2);

    LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1_U304 : component LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1147,
        din1 => LinearRegression_HTParameter_cotTheta_read,
        ce => ap_const_logic_1,
        dout => grp_fu_1081_p2);

    LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1_U305 : component LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1147,
        din1 => LinearRegression_LRParameter_cotTheta_read,
        ce => ap_const_logic_1,
        dout => grp_fu_1085_p2);

    LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1_U306 : component LRupdateHLS_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1134,
        din1 => LinearRegression_LRParameter_qOverPt_read,
        ce => ap_const_logic_1,
        dout => grp_fu_1089_p2);

    LRupdateHLS_fdiv_32ns_32ns_32_8_1_U307 : component LRupdateHLS_fdiv_32ns_32ns_32_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1095_p0,
        din1 => grp_fu_1095_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1095_p2);

    LRupdateHLS_fptrunc_64ns_32_1_1_U308 : component LRupdateHLS_fptrunc_64ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_1101_p0,
        dout => grp_fu_1101_p1);

    LRupdateHLS_fpext_32ns_64_1_1_U309 : component LRupdateHLS_fpext_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_1105_p0,
        dout => grp_fu_1105_p1);

    LRupdateHLS_fcmp_32ns_32ns_1_1_1_U310 : component LRupdateHLS_fcmp_32ns_32ns_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_1109_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1109_p2);

    LRupdateHLS_fcmp_32ns_32ns_1_1_1_U311 : component LRupdateHLS_fcmp_32ns_32ns_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_1115_p0,
        din1 => ap_const_lv32_40490FDB,
        opcode => ap_const_lv5_5,
        dout => grp_fu_1115_p2);

    LRupdateHLS_ddiv_64ns_64ns_64_17_1_U312 : component LRupdateHLS_ddiv_64ns_64ns_64_17_1
    generic map (
        ID => 1,
        NUM_STAGE => 17,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1166,
        din1 => grp_fu_1120_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1120_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_push_back_fu_977_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_push_back_fu_977_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
                    grp_push_back_fu_977_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_push_back_fu_977_ap_ready = ap_const_logic_1)) then 
                    grp_push_back_fu_977_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i_reg_944_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_1129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
                i_0_i_reg_944 <= ap_const_lv32_0;
            elsif (((grp_fu_1129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state92))) then 
                i_0_i_reg_944 <= i_reg_2282;
            end if; 
        end if;
    end process;

    i_i_reg_933_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_1129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
                i_i_reg_933 <= i_10_reg_2265;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
                i_i_reg_933 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_begin_0_rec_reg_888_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((tmp_140_fu_1307_p2 = ap_const_lv1_1) or (tmp_i_reg_2119 = ap_const_lv1_1)))) then 
                p_begin_0_rec_reg_888 <= p_rec1_reg_2104;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_begin_0_rec_reg_888 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_pn_in_i_reg_967_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_1129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state92))) then 
                p_pn_in_i_reg_967 <= i_0_i_reg_944;
            elsif (((ap_const_boolean_0 = ap_block_state100_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state100) and ((tmp_161_reg_2278 = ap_const_lv1_0) or (tmp_i9_reg_2261 = ap_const_lv1_0)))) then 
                p_pn_in_i_reg_967 <= temp_7_reg_2123;
            end if; 
        end if;
    end process;

    resid_stubId_reg_899_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_1283_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                resid_stubId_reg_899 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
                resid_stubId_reg_899 <= stubId_reg_2159;
            end if; 
        end if;
    end process;

    resid_z_reg_922_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((resid_ps_reg_2180 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
                resid_z_reg_922 <= grp_fu_1101_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
                resid_z_reg_922 <= tmp_160_reg_2251;
            end if; 
        end if;
    end process;

    temp_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state100_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state100) and ((tmp_161_reg_2278 = ap_const_lv1_0) or (tmp_i9_reg_2261 = ap_const_lv1_0)))) then 
                temp_fu_124 <= grp_push_back_fu_977_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                temp_fu_124 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_156_reg_912_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = LinearRegression_stu_428_reg_2185) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
                tmp_156_reg_912 <= resid_z_1_reg_2246;
            elsif (((ap_const_lv1_1 = LinearRegression_stu_428_reg_2185) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                tmp_156_reg_912 <= resid_z_2_reg_2223;
            end if; 
        end if;
    end process;

    tmp_164_reg_956_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_167_fu_1704_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state93))) then 
                tmp_164_reg_956 <= tmp_165_fu_1689_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state91) and ((tmp_161_fu_1673_p2 = ap_const_lv1_0) or (tmp_i9_reg_2261 = ap_const_lv1_0)))) then 
                tmp_164_reg_956 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then
                LinearRegression_res_20_reg_2563 <= p_pn_i_fu_1715_p1(5 - 1 downto 0);
                tmp_663_reg_2553 <= tmp_663_fu_1720_p1;
                tmp_664_reg_2558 <= tmp_664_fu_1724_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                LinearRegression_stu_417_reg_2096 <= p_begin_0_rec_cast_fu_1236_p1(5 - 1 downto 0);
                p_rec1_reg_2104 <= p_rec1_fu_1277_p2;
                    tmp_634_reg_2091(9 downto 1) <= tmp_634_fu_1266_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                LinearRegression_stu_419_reg_2114 <= LinearRegression_stubMap_data_second_size_s_q0;
                tmp_i_reg_2119 <= tmp_i_fu_1283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                LinearRegression_stu_428_reg_2185 <= LinearRegression_stubMap_data_second_data_barrel_s_q0;
                resid_ps_reg_2180 <= LinearRegression_stubMap_data_second_data_psModule_s_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                a_assign_3_reg_2086 <= a_assign_3_fu_1223_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state95)) then
                b_data_layerId_assi_12_reg_2313 <= b_data_layerId_assi_q0;
                b_data_layerId_assi_13_reg_2338 <= b_data_layerId_assi_q1;
                b_data_phi_assign_l_1_reg_2328 <= b_data_phi_assign_q1;
                b_data_phi_assign_l_reg_2303 <= b_data_phi_assign_q0;
                b_data_ps_assign_lo_1_reg_2348 <= b_data_ps_assign_q1;
                b_data_ps_assign_lo_reg_2323 <= b_data_ps_assign_q0;
                b_data_stubId_assig_12_reg_2318 <= b_data_stubId_assig_q0;
                b_data_stubId_assig_13_reg_2343 <= b_data_stubId_assig_q1;
                b_data_z_assign_loa_1_reg_2333 <= b_data_z_assign_q1;
                b_data_z_assign_loa_reg_2308 <= b_data_z_assign_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state96)) then
                b_data_layerId_assi_14_reg_2363 <= b_data_layerId_assi_q1;
                b_data_layerId_assi_15_reg_2388 <= b_data_layerId_assi_q0;
                b_data_phi_assign_l_2_reg_2353 <= b_data_phi_assign_q1;
                b_data_phi_assign_l_3_reg_2378 <= b_data_phi_assign_q0;
                b_data_ps_assign_lo_2_reg_2373 <= b_data_ps_assign_q1;
                b_data_ps_assign_lo_3_reg_2398 <= b_data_ps_assign_q0;
                b_data_stubId_assig_14_reg_2368 <= b_data_stubId_assig_q1;
                b_data_stubId_assig_15_reg_2393 <= b_data_stubId_assig_q0;
                b_data_z_assign_loa_2_reg_2358 <= b_data_z_assign_q1;
                b_data_z_assign_loa_3_reg_2383 <= b_data_z_assign_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state97)) then
                b_data_layerId_assi_16_reg_2413 <= b_data_layerId_assi_q1;
                b_data_layerId_assi_17_reg_2438 <= b_data_layerId_assi_q0;
                b_data_phi_assign_l_4_reg_2403 <= b_data_phi_assign_q1;
                b_data_phi_assign_l_5_reg_2428 <= b_data_phi_assign_q0;
                b_data_ps_assign_lo_4_reg_2423 <= b_data_ps_assign_q1;
                b_data_ps_assign_lo_5_reg_2448 <= b_data_ps_assign_q0;
                b_data_stubId_assig_16_reg_2418 <= b_data_stubId_assig_q1;
                b_data_stubId_assig_17_reg_2443 <= b_data_stubId_assig_q0;
                b_data_z_assign_loa_4_reg_2408 <= b_data_z_assign_q1;
                b_data_z_assign_loa_5_reg_2433 <= b_data_z_assign_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                b_data_layerId_assi_18_reg_2463 <= b_data_layerId_assi_q1;
                b_data_layerId_assi_19_reg_2488 <= b_data_layerId_assi_q0;
                b_data_phi_assign_l_6_reg_2453 <= b_data_phi_assign_q1;
                b_data_phi_assign_l_7_reg_2478 <= b_data_phi_assign_q0;
                b_data_ps_assign_lo_6_reg_2473 <= b_data_ps_assign_q1;
                b_data_ps_assign_lo_7_reg_2498 <= b_data_ps_assign_q0;
                b_data_stubId_assig_18_reg_2468 <= b_data_stubId_assig_q1;
                b_data_stubId_assig_19_reg_2493 <= b_data_stubId_assig_q0;
                b_data_z_assign_loa_6_reg_2458 <= b_data_z_assign_q1;
                b_data_z_assign_loa_7_reg_2483 <= b_data_z_assign_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state99)) then
                b_data_layerId_assi_20_reg_2513 <= b_data_layerId_assi_q1;
                b_data_layerId_assi_21_reg_2538 <= b_data_layerId_assi_q0;
                b_data_phi_assign_l_8_reg_2503 <= b_data_phi_assign_q1;
                b_data_phi_assign_l_9_reg_2528 <= b_data_phi_assign_q0;
                b_data_ps_assign_lo_8_reg_2523 <= b_data_ps_assign_q1;
                b_data_ps_assign_lo_9_reg_2548 <= b_data_ps_assign_q0;
                b_data_stubId_assig_20_reg_2518 <= b_data_stubId_assig_q1;
                b_data_stubId_assig_21_reg_2543 <= b_data_stubId_assig_q0;
                b_data_z_assign_loa_8_reg_2508 <= b_data_z_assign_q1;
                b_data_z_assign_loa_9_reg_2533 <= b_data_z_assign_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then
                i_10_reg_2265 <= i_10_fu_1662_p2;
                tmp_i9_reg_2261 <= tmp_i9_fu_1657_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i9_reg_2261 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state91))) then
                i_reg_2282 <= i_fu_1678_p2;
                tmp_161_reg_2278 <= tmp_161_fu_1673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                p_0_i_i_reg_2211 <= p_0_i_i_fu_1421_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                phiResid_reg_2216 <= phiResid_fu_1532_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
                reg_1134 <= grp_fu_1057_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
                reg_1142 <= grp_fu_1062_p2;
                reg_1147 <= grp_fu_1067_p2;
                reg_1154 <= grp_fu_1072_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state10))) then
                reg_1160 <= grp_fu_1077_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((resid_ps_reg_2180 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61)))) then
                reg_1166 <= grp_fu_1105_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                resid_layerId_reg_2234 <= LinearRegression_stubMap_data_first_q0;
                resid_phi_reg_2241 <= grp_fu_1101_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                resid_z_1_reg_2246 <= grp_fu_1095_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                resid_z_2_reg_2223 <= resid_z_2_fu_1650_p3;
                tmp_155_reg_2229 <= grp_fu_1120_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_2119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                stubId_reg_2159 <= stubId_fu_1312_p2;
                temp_7_reg_2123 <= temp_fu_124;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_147_reg_2189 <= grp_fu_1081_p2;
                tmp_149_reg_2194 <= grp_fu_1085_p2;
                tmp_151_reg_2199 <= grp_fu_1089_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state87)) then
                tmp_158_reg_2256 <= grp_fu_1120_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                tmp_160_reg_2251 <= grp_fu_1095_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                zResid_reg_2204 <= grp_fu_1057_p2;
            end if;
        end if;
    end process;
    tmp_634_reg_2091(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state61, resid_ps_reg_2180, ap_CS_fsm_state2, tmp_s_fu_1272_p2, tmp_i_reg_2119, ap_CS_fsm_state4, LinearRegression_stu_428_reg_2185, ap_CS_fsm_state53, tmp_i9_fu_1657_p2, tmp_i9_reg_2261, ap_CS_fsm_state89, tmp_161_fu_1673_p2, ap_CS_fsm_state91, ap_CS_fsm_state93, tmp_140_fu_1307_p2, ap_CS_fsm_state90, grp_fu_1129_p2, ap_CS_fsm_state92, tmp_167_fu_1704_p2, ap_CS_fsm_state100, ap_block_state100_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_s_fu_1272_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((tmp_140_fu_1307_p2 = ap_const_lv1_1) or (tmp_i_reg_2119 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((ap_const_lv1_1 = LinearRegression_stu_428_reg_2185) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (((resid_ps_reg_2180 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                if (((tmp_i9_fu_1657_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state89))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_state90 => 
                if (((grp_fu_1129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state89;
                end if;
            when ap_ST_fsm_state91 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state91) and ((tmp_161_fu_1673_p2 = ap_const_lv1_0) or (tmp_i9_reg_2261 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                else
                    ap_NS_fsm <= ap_ST_fsm_state92;
                end if;
            when ap_ST_fsm_state92 => 
                if (((grp_fu_1129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state92))) then
                    ap_NS_fsm <= ap_ST_fsm_state100;
                else
                    ap_NS_fsm <= ap_ST_fsm_state91;
                end if;
            when ap_ST_fsm_state93 => 
                if (((tmp_167_fu_1704_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state93))) then
                    ap_NS_fsm <= ap_ST_fsm_state94;
                else
                    ap_NS_fsm <= ap_ST_fsm_state93;
                end if;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                if (((ap_const_boolean_0 = ap_block_state100_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state100))) then
                    ap_NS_fsm <= ap_ST_fsm_state101;
                else
                    ap_NS_fsm <= ap_ST_fsm_state100;
                end if;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    LinearRegression_HTP_fu_1171_p1 <= LinearRegression_HTParameter_cotTheta_read;

    LinearRegression_residuals_data_first_address0_assign_proc : process(ap_CS_fsm_state89, ap_CS_fsm_state91, grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_address0, ap_CS_fsm_state100, ap_predicate_op559_call_state100, tmp_i4_fu_1668_p1, tmp_162_fu_1684_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            LinearRegression_residuals_data_first_address0 <= tmp_162_fu_1684_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            LinearRegression_residuals_data_first_address0 <= tmp_i4_fu_1668_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_first_address0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_address0;
        else 
            LinearRegression_residuals_data_first_address0 <= "XXXXX";
        end if; 
    end process;


    LinearRegression_residuals_data_first_ce0_assign_proc : process(ap_CS_fsm_state89, ap_CS_fsm_state91, grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_ce0, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            LinearRegression_residuals_data_first_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_first_ce0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_ce0;
        else 
            LinearRegression_residuals_data_first_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LinearRegression_residuals_data_first_d0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_d0;

    LinearRegression_residuals_data_first_we0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_we0, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_first_we0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_first_we0;
        else 
            LinearRegression_residuals_data_first_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_layerId_address0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100, tmp_648_cast_fu_1758_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_layerId_address0 <= tmp_648_cast_fu_1758_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_layerId_address0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address0;
        else 
            LinearRegression_residuals_data_second_data_layerId_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_layerId_address1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_address1;

    LinearRegression_residuals_data_second_data_layerId_ce0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_layerId_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_layerId_ce0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce0;
        else 
            LinearRegression_residuals_data_second_data_layerId_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_layerId_ce1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_layerId_ce1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_ce1;
        else 
            LinearRegression_residuals_data_second_data_layerId_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_layerId_d0_assign_proc : process(resid_layerId_reg_2234, grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_layerId_d0 <= resid_layerId_reg_2234;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_layerId_d0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d0;
        else 
            LinearRegression_residuals_data_second_data_layerId_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_layerId_d1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_d1;

    LinearRegression_residuals_data_second_data_layerId_we0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_layerId_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_layerId_we0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we0;
        else 
            LinearRegression_residuals_data_second_data_layerId_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_layerId_we1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_layerId_we1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_layerId_we1;
        else 
            LinearRegression_residuals_data_second_data_layerId_we1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_phi_address0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100, tmp_648_cast_fu_1758_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_phi_address0 <= tmp_648_cast_fu_1758_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_phi_address0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address0;
        else 
            LinearRegression_residuals_data_second_data_phi_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_phi_address1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_address1;

    LinearRegression_residuals_data_second_data_phi_ce0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_phi_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_phi_ce0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce0;
        else 
            LinearRegression_residuals_data_second_data_phi_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_phi_ce1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_phi_ce1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_ce1;
        else 
            LinearRegression_residuals_data_second_data_phi_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_phi_d0_assign_proc : process(resid_phi_reg_2241, grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_phi_d0 <= resid_phi_reg_2241;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_phi_d0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d0;
        else 
            LinearRegression_residuals_data_second_data_phi_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_phi_d1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_d1;

    LinearRegression_residuals_data_second_data_phi_we0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_phi_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_phi_we0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we0;
        else 
            LinearRegression_residuals_data_second_data_phi_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_phi_we1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_phi_we1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_phi_we1;
        else 
            LinearRegression_residuals_data_second_data_phi_we1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_ps_address0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100, tmp_648_cast_fu_1758_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_ps_address0 <= tmp_648_cast_fu_1758_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_ps_address0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address0;
        else 
            LinearRegression_residuals_data_second_data_ps_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_ps_address1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_address1;

    LinearRegression_residuals_data_second_data_ps_ce0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_ps_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_ps_ce0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce0;
        else 
            LinearRegression_residuals_data_second_data_ps_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_ps_ce1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_ps_ce1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_ce1;
        else 
            LinearRegression_residuals_data_second_data_ps_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_ps_d0_assign_proc : process(resid_ps_reg_2180, grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_ps_d0 <= resid_ps_reg_2180;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_ps_d0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d0;
        else 
            LinearRegression_residuals_data_second_data_ps_d0 <= "X";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_ps_d1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_d1;

    LinearRegression_residuals_data_second_data_ps_we0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_ps_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_ps_we0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we0;
        else 
            LinearRegression_residuals_data_second_data_ps_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_ps_we1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_ps_we1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_ps_we1;
        else 
            LinearRegression_residuals_data_second_data_ps_we1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_stubId_address0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100, tmp_648_cast_fu_1758_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_stubId_address0 <= tmp_648_cast_fu_1758_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_stubId_address0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address0;
        else 
            LinearRegression_residuals_data_second_data_stubId_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_stubId_address1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_address1;

    LinearRegression_residuals_data_second_data_stubId_ce0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_stubId_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_stubId_ce0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce0;
        else 
            LinearRegression_residuals_data_second_data_stubId_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_stubId_ce1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_stubId_ce1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_ce1;
        else 
            LinearRegression_residuals_data_second_data_stubId_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_stubId_d0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d0, resid_stubId_reg_899, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_stubId_d0 <= resid_stubId_reg_899;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_stubId_d0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d0;
        else 
            LinearRegression_residuals_data_second_data_stubId_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_stubId_d1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_d1;

    LinearRegression_residuals_data_second_data_stubId_we0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_stubId_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_stubId_we0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we0;
        else 
            LinearRegression_residuals_data_second_data_stubId_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_stubId_we1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_stubId_we1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_stubId_we1;
        else 
            LinearRegression_residuals_data_second_data_stubId_we1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_z_address0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100, tmp_648_cast_fu_1758_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_z_address0 <= tmp_648_cast_fu_1758_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_z_address0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address0;
        else 
            LinearRegression_residuals_data_second_data_z_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_z_address1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_address1;

    LinearRegression_residuals_data_second_data_z_ce0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_z_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_z_ce0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce0;
        else 
            LinearRegression_residuals_data_second_data_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_z_ce1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_z_ce1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_ce1;
        else 
            LinearRegression_residuals_data_second_data_z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_z_d0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d0, ap_CS_fsm_state102, resid_z_reg_922, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_z_d0 <= resid_z_reg_922;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_z_d0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d0;
        else 
            LinearRegression_residuals_data_second_data_z_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    LinearRegression_residuals_data_second_data_z_d1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_d1;

    LinearRegression_residuals_data_second_data_z_we0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_data_z_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_z_we0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we0;
        else 
            LinearRegression_residuals_data_second_data_z_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_data_z_we1_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we1, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_data_z_we1 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_data_z_we1;
        else 
            LinearRegression_residuals_data_second_data_z_we1 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_size_s_address0_assign_proc : process(ap_CS_fsm_state101, LinearRegression_res_20_reg_2563, grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_address0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100, p_pn_i_fu_1715_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_size_s_address0 <= LinearRegression_res_20_reg_2563;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            LinearRegression_residuals_data_second_size_s_address0 <= p_pn_i_fu_1715_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_size_s_address0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_address0;
        else 
            LinearRegression_residuals_data_second_size_s_address0 <= "XXXXX";
        end if; 
    end process;


    LinearRegression_residuals_data_second_size_s_ce0_assign_proc : process(ap_CS_fsm_state101, grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_ce0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101))) then 
            LinearRegression_residuals_data_second_size_s_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_size_s_ce0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_ce0;
        else 
            LinearRegression_residuals_data_second_size_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LinearRegression_residuals_data_second_size_s_d0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_d0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100, arrayHLS_size_write_fu_1767_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_size_s_d0 <= arrayHLS_size_write_fu_1767_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_size_s_d0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_d0;
        else 
            LinearRegression_residuals_data_second_size_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    LinearRegression_residuals_data_second_size_s_we0_assign_proc : process(grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_we0, ap_CS_fsm_state102, ap_CS_fsm_state100, ap_predicate_op559_call_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            LinearRegression_residuals_data_second_size_s_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (ap_predicate_op559_call_state100 = ap_const_boolean_1))) then 
            LinearRegression_residuals_data_second_size_s_we0 <= grp_push_back_fu_977_mapHLS_unsigned_int_arrayHLS_residData_data_second_size_s_we0;
        else 
            LinearRegression_residuals_data_second_size_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    LinearRegression_stubMap_data_first_address0 <= LinearRegression_stu_417_reg_2096;

    LinearRegression_stubMap_data_first_ce0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            LinearRegression_stubMap_data_first_ce0 <= ap_const_logic_1;
        else 
            LinearRegression_stubMap_data_first_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LinearRegression_stubMap_data_second_data_barrel_s_address0 <= tmp_644_cast_fu_1298_p1(9 - 1 downto 0);

    LinearRegression_stubMap_data_second_data_barrel_s_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LinearRegression_stubMap_data_second_data_barrel_s_ce0 <= ap_const_logic_1;
        else 
            LinearRegression_stubMap_data_second_data_barrel_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LinearRegression_stubMap_data_second_data_phi_s_address0 <= tmp_644_cast_fu_1298_p1(9 - 1 downto 0);

    LinearRegression_stubMap_data_second_data_phi_s_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LinearRegression_stubMap_data_second_data_phi_s_ce0 <= ap_const_logic_1;
        else 
            LinearRegression_stubMap_data_second_data_phi_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LinearRegression_stubMap_data_second_data_psModule_s_address0 <= tmp_644_cast_fu_1298_p1(9 - 1 downto 0);

    LinearRegression_stubMap_data_second_data_psModule_s_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LinearRegression_stubMap_data_second_data_psModule_s_ce0 <= ap_const_logic_1;
        else 
            LinearRegression_stubMap_data_second_data_psModule_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LinearRegression_stubMap_data_second_data_r_s_address0 <= tmp_644_cast_fu_1298_p1(9 - 1 downto 0);

    LinearRegression_stubMap_data_second_data_r_s_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LinearRegression_stubMap_data_second_data_r_s_ce0 <= ap_const_logic_1;
        else 
            LinearRegression_stubMap_data_second_data_r_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LinearRegression_stubMap_data_second_data_z_s_address0 <= tmp_644_cast_fu_1298_p1(9 - 1 downto 0);

    LinearRegression_stubMap_data_second_data_z_s_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LinearRegression_stubMap_data_second_data_z_s_ce0 <= ap_const_logic_1;
        else 
            LinearRegression_stubMap_data_second_data_z_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LinearRegression_stubMap_data_second_size_s_address0 <= p_begin_0_rec_cast_fu_1236_p1(5 - 1 downto 0);

    LinearRegression_stubMap_data_second_size_s_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            LinearRegression_stubMap_data_second_size_s_ce0 <= ap_const_logic_1;
        else 
            LinearRegression_stubMap_data_second_size_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    a_assign_3_fu_1223_p3 <= 
        tmp_i2_fu_1219_p1 when (tmp_171_fu_1207_p2(0) = '1') else 
        LinearRegression_HTParameter_cotTheta_read;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);

    ap_block_state100_on_subcall_done_assign_proc : process(grp_push_back_fu_977_ap_done, ap_predicate_op559_call_state100)
    begin
                ap_block_state100_on_subcall_done <= ((grp_push_back_fu_977_ap_done = ap_const_logic_0) and (ap_predicate_op559_call_state100 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_s_fu_1272_p2)
    begin
        if ((((tmp_s_fu_1272_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_tmp_156_phi_fu_915_p4_assign_proc : process(ap_CS_fsm_state61, LinearRegression_stu_428_reg_2185, resid_z_1_reg_2246, tmp_156_reg_912)
    begin
        if (((ap_const_lv1_0 = LinearRegression_stu_428_reg_2185) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            ap_phi_mux_tmp_156_phi_fu_915_p4 <= resid_z_1_reg_2246;
        else 
            ap_phi_mux_tmp_156_phi_fu_915_p4 <= tmp_156_reg_912;
        end if; 
    end process;


    ap_predicate_op559_call_state100_assign_proc : process(tmp_i9_reg_2261, tmp_161_reg_2278)
    begin
                ap_predicate_op559_call_state100 <= ((tmp_161_reg_2278 = ap_const_lv1_0) or (tmp_i9_reg_2261 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_s_fu_1272_p2)
    begin
        if (((tmp_s_fu_1272_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= temp_fu_124;
    arrayHLS_size_write_fu_1767_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(LinearRegression_residuals_data_second_size_s_q0));

    b_data_layerId_assi_address0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, tmp_166_fu_1695_p1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_layerId_assi_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_layerId_assi_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_layerId_assi_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_layerId_assi_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_layerId_assi_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_layerId_assi_address0 <= tmp_166_fu_1695_p1(4 - 1 downto 0);
        else 
            b_data_layerId_assi_address0 <= "XXXX";
        end if; 
    end process;


    b_data_layerId_assi_address1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_layerId_assi_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_layerId_assi_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_layerId_assi_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_layerId_assi_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_layerId_assi_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            b_data_layerId_assi_address1 <= "XXXX";
        end if; 
    end process;


    b_data_layerId_assi_ce0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state93))) then 
            b_data_layerId_assi_ce0 <= ap_const_logic_1;
        else 
            b_data_layerId_assi_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_layerId_assi_ce1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            b_data_layerId_assi_ce1 <= ap_const_logic_1;
        else 
            b_data_layerId_assi_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_layerId_assi_we0_assign_proc : process(ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_layerId_assi_we0 <= ap_const_logic_1;
        else 
            b_data_layerId_assi_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_phi_assign_address0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, tmp_166_fu_1695_p1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_phi_assign_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_phi_assign_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_phi_assign_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_phi_assign_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_phi_assign_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_phi_assign_address0 <= tmp_166_fu_1695_p1(4 - 1 downto 0);
        else 
            b_data_phi_assign_address0 <= "XXXX";
        end if; 
    end process;


    b_data_phi_assign_address1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_phi_assign_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_phi_assign_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_phi_assign_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_phi_assign_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_phi_assign_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            b_data_phi_assign_address1 <= "XXXX";
        end if; 
    end process;


    b_data_phi_assign_ce0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state93))) then 
            b_data_phi_assign_ce0 <= ap_const_logic_1;
        else 
            b_data_phi_assign_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_phi_assign_ce1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            b_data_phi_assign_ce1 <= ap_const_logic_1;
        else 
            b_data_phi_assign_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_phi_assign_we0_assign_proc : process(ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_phi_assign_we0 <= ap_const_logic_1;
        else 
            b_data_phi_assign_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_ps_assign_address0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, tmp_166_fu_1695_p1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_ps_assign_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_ps_assign_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_ps_assign_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_ps_assign_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_ps_assign_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_ps_assign_address0 <= tmp_166_fu_1695_p1(4 - 1 downto 0);
        else 
            b_data_ps_assign_address0 <= "XXXX";
        end if; 
    end process;


    b_data_ps_assign_address1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_ps_assign_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_ps_assign_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_ps_assign_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_ps_assign_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_ps_assign_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            b_data_ps_assign_address1 <= "XXXX";
        end if; 
    end process;


    b_data_ps_assign_ce0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state93))) then 
            b_data_ps_assign_ce0 <= ap_const_logic_1;
        else 
            b_data_ps_assign_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_ps_assign_ce1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            b_data_ps_assign_ce1 <= ap_const_logic_1;
        else 
            b_data_ps_assign_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_ps_assign_we0_assign_proc : process(ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_ps_assign_we0 <= ap_const_logic_1;
        else 
            b_data_ps_assign_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_stubId_assig_address0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, tmp_166_fu_1695_p1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_stubId_assig_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_stubId_assig_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_stubId_assig_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_stubId_assig_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_stubId_assig_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_stubId_assig_address0 <= tmp_166_fu_1695_p1(4 - 1 downto 0);
        else 
            b_data_stubId_assig_address0 <= "XXXX";
        end if; 
    end process;


    b_data_stubId_assig_address1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_stubId_assig_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_stubId_assig_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_stubId_assig_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_stubId_assig_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_stubId_assig_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            b_data_stubId_assig_address1 <= "XXXX";
        end if; 
    end process;


    b_data_stubId_assig_ce0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state93))) then 
            b_data_stubId_assig_ce0 <= ap_const_logic_1;
        else 
            b_data_stubId_assig_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_stubId_assig_ce1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            b_data_stubId_assig_ce1 <= ap_const_logic_1;
        else 
            b_data_stubId_assig_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_stubId_assig_we0_assign_proc : process(ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_stubId_assig_we0 <= ap_const_logic_1;
        else 
            b_data_stubId_assig_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_z_assign_address0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, tmp_166_fu_1695_p1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_z_assign_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_z_assign_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_z_assign_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_z_assign_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_z_assign_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_z_assign_address0 <= tmp_166_fu_1695_p1(4 - 1 downto 0);
        else 
            b_data_z_assign_address0 <= "XXXX";
        end if; 
    end process;


    b_data_z_assign_address1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            b_data_z_assign_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            b_data_z_assign_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            b_data_z_assign_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            b_data_z_assign_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            b_data_z_assign_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            b_data_z_assign_address1 <= "XXXX";
        end if; 
    end process;


    b_data_z_assign_ce0_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state93))) then 
            b_data_z_assign_ce0 <= ap_const_logic_1;
        else 
            b_data_z_assign_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_z_assign_ce1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            b_data_z_assign_ce1 <= ap_const_logic_1;
        else 
            b_data_z_assign_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_data_z_assign_we0_assign_proc : process(ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            b_data_z_assign_we0 <= ap_const_logic_1;
        else 
            b_data_z_assign_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1057_p0_assign_proc : process(LinearRegression_stubMap_data_second_data_r_s_q0, reg_1134, reg_1142, ap_CS_fsm_state5, p_0_i_i_reg_2211, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state19, ap_CS_fsm_state23, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_1057_p0 <= p_0_i_i_reg_2211;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_1057_p0 <= reg_1134;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_fu_1057_p0 <= reg_1142;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1057_p0 <= LinearRegression_stubMap_data_second_data_r_s_q0;
        else 
            grp_fu_1057_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1057_p1_assign_proc : process(LinearRegression_settings_chosenRofPhi_read, reg_1147, reg_1154, reg_1160, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state19, ap_CS_fsm_state23, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_1057_p1 <= reg_1154;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_1057_p1 <= reg_1147;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_1057_p1 <= reg_1160;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1057_p1 <= LinearRegression_settings_chosenRofPhi_read;
        else 
            grp_fu_1057_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1062_p0_assign_proc : process(LinearRegression_stubMap_data_second_data_phi_s_q0, reg_1154, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1062_p0 <= reg_1154;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1062_p0 <= LinearRegression_stubMap_data_second_data_phi_s_q0;
        else 
            grp_fu_1062_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1062_p1_assign_proc : process(LinearRegression_HTParameter_phiT_read, ap_CS_fsm_state5, tmp_147_reg_2189, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1062_p1 <= tmp_147_reg_2189;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1062_p1 <= LinearRegression_HTParameter_phiT_read;
        else 
            grp_fu_1062_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1067_opcode_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1067_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1067_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1067_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1067_p0_assign_proc : process(LinearRegression_stubMap_data_second_data_r_s_q0, ap_CS_fsm_state5, tmp_149_reg_2194, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1067_p0 <= tmp_149_reg_2194;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1067_p0 <= LinearRegression_stubMap_data_second_data_r_s_q0;
        else 
            grp_fu_1067_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1067_p1_assign_proc : process(LinearRegression_settings_chosenRofZ_read, LinearRegression_LRParameter_zT_read, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1067_p1 <= LinearRegression_LRParameter_zT_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1067_p1 <= LinearRegression_settings_chosenRofZ_read;
        else 
            grp_fu_1067_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1072_opcode_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1072_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1072_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1072_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1072_p0_assign_proc : process(LinearRegression_stubMap_data_second_data_z_s_q0, ap_CS_fsm_state5, tmp_151_reg_2199, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1072_p0 <= tmp_151_reg_2199;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1072_p0 <= LinearRegression_stubMap_data_second_data_z_s_q0;
        else 
            grp_fu_1072_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1072_p1_assign_proc : process(LinearRegression_HTParameter_zT_read, LinearRegression_LRParameter_phiT_read, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1072_p1 <= LinearRegression_LRParameter_phiT_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1072_p1 <= LinearRegression_HTParameter_zT_read;
        else 
            grp_fu_1072_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1077_p0_assign_proc : process(reg_1134, reg_1160, ap_CS_fsm_state15, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_1077_p0 <= reg_1160;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_1077_p0 <= reg_1134;
        else 
            grp_fu_1077_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1077_p1_assign_proc : process(LinearRegression_HTParameter_qOverPt_read, ap_CS_fsm_state15, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_1077_p1 <= ap_const_lv32_40C90FDB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            grp_fu_1077_p1 <= ap_const_lv32_3E22F983;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_1077_p1 <= LinearRegression_HTParameter_qOverPt_read;
        else 
            grp_fu_1077_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1095_p0_assign_proc : process(resid_z_2_reg_2223, ap_CS_fsm_state53, tmp_156_reg_912, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_fu_1095_p0 <= tmp_156_reg_912;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1095_p0 <= resid_z_2_reg_2223;
        else 
            grp_fu_1095_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1095_p1_assign_proc : process(a_assign_3_reg_2086, ap_CS_fsm_state53, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_fu_1095_p1 <= ap_const_lv32_40200000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1095_p1 <= a_assign_3_reg_2086;
        else 
            grp_fu_1095_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1101_p0_assign_proc : process(tmp_155_reg_2229, ap_CS_fsm_state53, tmp_158_reg_2256, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fu_1101_p0 <= tmp_158_reg_2256;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1101_p0 <= tmp_155_reg_2229;
        else 
            grp_fu_1101_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1105_p0_assign_proc : process(ap_CS_fsm_state35, ap_CS_fsm_state61, ap_phi_mux_tmp_156_phi_fu_915_p4, phi_assign_fu_1591_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1105_p0 <= ap_phi_mux_tmp_156_phi_fu_915_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_1105_p0 <= phi_assign_fu_1591_p3;
        else 
            grp_fu_1105_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1109_p0_assign_proc : process(ap_CS_fsm_state1, LinearRegression_HTParameter_cotTheta_read, reg_1134, ap_CS_fsm_state35, zResid_reg_2204, ap_CS_fsm_state22, phiResid_reg_2216, ap_CS_fsm_state34, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_1109_p0 <= zResid_reg_2204;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_1109_p0 <= phiResid_reg_2216;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_1109_p0 <= reg_1134;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1109_p0 <= LinearRegression_HTParameter_cotTheta_read;
        else 
            grp_fu_1109_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1115_p0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state34, p_0_i_i_i_fu_1370_p3, p_0_i_i_i5_fu_1481_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_1115_p0 <= p_0_i_i_i5_fu_1481_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1115_p0 <= p_0_i_i_i_fu_1370_p3;
        else 
            grp_fu_1115_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1120_p1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_1120_p1 <= ap_const_lv64_3FB1EB851EB851EC;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_1120_p1 <= ap_const_lv64_3F50624DD2F1A9FC;
        else 
            grp_fu_1120_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1129_p2 <= "1" when (LinearRegression_residuals_data_first_q0 = resid_layerId_reg_2234) else "0";
    grp_push_back_fu_977_ap_start <= grp_push_back_fu_977_ap_start_reg;
    i_10_fu_1662_p2 <= std_logic_vector(unsigned(i_i_reg_933) + unsigned(ap_const_lv32_1));
    i_fu_1678_p2 <= std_logic_vector(unsigned(i_0_i_reg_944) + unsigned(ap_const_lv32_1));
    notlhs1_fu_1336_p2 <= "0" when (tmp_172_fu_1322_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_1397_p2 <= "0" when (tmp_177_fu_1383_p4 = ap_const_lv8_FF) else "1";
    notlhs3_fu_1447_p2 <= "0" when (tmp_182_fu_1433_p4 = ap_const_lv8_FF) else "1";
    notlhs4_fu_1508_p2 <= "0" when (tmp_187_fu_1494_p4 = ap_const_lv8_FF) else "1";
    notlhs5_fu_1557_p2 <= "0" when (tmp_192_fu_1543_p4 = ap_const_lv8_FF) else "1";
    notlhs6_fu_1616_p2 <= "0" when (tmp_197_fu_1602_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_1189_p2 <= "0" when (tmp_fu_1175_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_1563_p2 <= "1" when (tmp_661_fu_1553_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_1622_p2 <= "1" when (tmp_662_fu_1612_p1 = ap_const_lv23_0) else "0";
    notrhs6_fu_1342_p2 <= "1" when (tmp_657_fu_1332_p1 = ap_const_lv23_0) else "0";
    notrhs7_fu_1403_p2 <= "1" when (tmp_658_fu_1393_p1 = ap_const_lv23_0) else "0";
    notrhs8_fu_1453_p2 <= "1" when (tmp_659_fu_1443_p1 = ap_const_lv23_0) else "0";
    notrhs9_fu_1514_p2 <= "1" when (tmp_660_fu_1504_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_1195_p2 <= "1" when (tmp_653_fu_1185_p1 = ap_const_lv23_0) else "0";
    p_0_i_i10_to_int_fu_1540_p1 <= phiResid_reg_2216;
    p_0_i_i_fu_1421_p3 <= 
        reg_1134 when (tmp_181_fu_1415_p2(0) = '1') else 
        grp_fu_1057_p2;
    p_0_i_i_i5_fu_1481_p3 <= 
        tmp_i_i_i4_fu_1477_p1 when (tmp_186_fu_1465_p2(0) = '1') else 
        reg_1134;
    p_0_i_i_i5_to_int_fu_1490_p1 <= p_0_i_i_i5_fu_1481_p3;
    p_0_i_i_i_fu_1370_p3 <= 
        tmp_i_i_i_fu_1366_p1 when (tmp_176_fu_1354_p2(0) = '1') else 
        reg_1134;
    p_0_i_i_i_to_int_fu_1379_p1 <= p_0_i_i_i_fu_1370_p3;
    p_begin_0_rec_cast_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_begin_0_rec_reg_888),64));
    p_pn_i_fu_1715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_pn_in_i_reg_967),64));
    p_rec1_fu_1277_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(p_begin_0_rec_reg_888));
    p_shl3_cast_fu_1258_p3 <= (tmp_655_fu_1254_p1 & ap_const_lv1_0);
    p_shl4_cast_fu_1728_p3 <= (tmp_663_reg_2553 & ap_const_lv3_0);
    p_shl5_cast_fu_1735_p3 <= (tmp_664_reg_2558 & ap_const_lv1_0);
    p_shl_cast_fu_1246_p3 <= (tmp_654_fu_1242_p1 & ap_const_lv3_0);
    phiResid_fu_1532_p3 <= 
        reg_1134 when (tmp_191_fu_1526_p2(0) = '1') else 
        grp_fu_1057_p2;
    phi_assign_fu_1591_p3 <= 
        tmp_i_42_fu_1587_p1 when (tmp_196_fu_1575_p2(0) = '1') else 
        phiResid_reg_2216;
    resid_z_2_fu_1650_p3 <= 
        tmp_i3_fu_1646_p1 when (tmp_201_fu_1634_p2(0) = '1') else 
        zResid_reg_2204;
    stubId_fu_1312_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(resid_stubId_reg_899));
    tmp_140_fu_1307_p2 <= "1" when (resid_stubId_reg_899 = LinearRegression_stu_419_reg_2114) else "0";
    tmp_153_to_int_fu_1318_p1 <= reg_1134;
    tmp_161_fu_1673_p2 <= "1" when (unsigned(i_0_i_reg_944) < unsigned(temp_7_reg_2123)) else "0";
    tmp_162_fu_1684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_reg_944),64));
    tmp_163_to_int_fu_1429_p1 <= reg_1134;
    tmp_165_fu_1689_p2 <= std_logic_vector(unsigned(tmp_164_reg_956) + unsigned(ap_const_lv4_1));
    tmp_166_fu_1695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_164_reg_956),64));
    tmp_167_fu_1704_p2 <= "1" when (tmp_164_reg_956 = ap_const_lv4_9) else "0";
    tmp_169_fu_1201_p2 <= (notrhs_fu_1195_p2 or notlhs_fu_1189_p2);
    tmp_171_fu_1207_p2 <= (tmp_169_fu_1201_p2 and grp_fu_1109_p2);
    tmp_172_fu_1322_p4 <= tmp_153_to_int_fu_1318_p1(30 downto 23);
    tmp_174_fu_1348_p2 <= (notrhs6_fu_1342_p2 or notlhs1_fu_1336_p2);
    tmp_176_fu_1354_p2 <= (tmp_174_fu_1348_p2 and grp_fu_1109_p2);
    tmp_177_fu_1383_p4 <= p_0_i_i_i_to_int_fu_1379_p1(30 downto 23);
    tmp_179_fu_1409_p2 <= (notrhs7_fu_1403_p2 or notlhs2_fu_1397_p2);
    tmp_181_fu_1415_p2 <= (tmp_179_fu_1409_p2 and grp_fu_1115_p2);
    tmp_182_fu_1433_p4 <= tmp_163_to_int_fu_1429_p1(30 downto 23);
    tmp_184_fu_1459_p2 <= (notrhs8_fu_1453_p2 or notlhs3_fu_1447_p2);
    tmp_186_fu_1465_p2 <= (tmp_184_fu_1459_p2 and grp_fu_1109_p2);
    tmp_187_fu_1494_p4 <= p_0_i_i_i5_to_int_fu_1490_p1(30 downto 23);
    tmp_189_fu_1520_p2 <= (notrhs9_fu_1514_p2 or notlhs4_fu_1508_p2);
    tmp_191_fu_1526_p2 <= (tmp_189_fu_1520_p2 and grp_fu_1115_p2);
    tmp_192_fu_1543_p4 <= p_0_i_i10_to_int_fu_1540_p1(30 downto 23);
    tmp_194_fu_1569_p2 <= (notrhs1_fu_1563_p2 or notlhs5_fu_1557_p2);
    tmp_196_fu_1575_p2 <= (tmp_194_fu_1569_p2 and grp_fu_1109_p2);
    tmp_197_fu_1602_p4 <= zResid_to_int_fu_1599_p1(30 downto 23);
    tmp_199_fu_1628_p2 <= (notrhs2_fu_1622_p2 or notlhs6_fu_1616_p2);
    tmp_201_fu_1634_p2 <= (tmp_199_fu_1628_p2 and grp_fu_1109_p2);
    tmp_634_fu_1266_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1246_p3) + unsigned(p_shl3_cast_fu_1258_p3));
    tmp_635_fu_1293_p2 <= std_logic_vector(unsigned(tmp_634_reg_2091) + unsigned(tmp_656_fu_1289_p1));
    tmp_636_fu_1742_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_1728_p3) + unsigned(p_shl5_cast_fu_1735_p3));
    tmp_637_fu_1752_p2 <= std_logic_vector(unsigned(tmp_665_fu_1748_p1) + unsigned(tmp_636_fu_1742_p2));
    tmp_644_cast_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_635_fu_1293_p2),64));
    tmp_648_cast_fu_1758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_637_fu_1752_p2),64));
    tmp_653_fu_1185_p1 <= LinearRegression_HTP_fu_1171_p1(23 - 1 downto 0);
    tmp_654_fu_1242_p1 <= p_begin_0_rec_reg_888(7 - 1 downto 0);
    tmp_655_fu_1254_p1 <= p_begin_0_rec_reg_888(9 - 1 downto 0);
    tmp_656_fu_1289_p1 <= resid_stubId_reg_899(10 - 1 downto 0);
    tmp_657_fu_1332_p1 <= tmp_153_to_int_fu_1318_p1(23 - 1 downto 0);
    tmp_658_fu_1393_p1 <= p_0_i_i_i_to_int_fu_1379_p1(23 - 1 downto 0);
    tmp_659_fu_1443_p1 <= tmp_163_to_int_fu_1429_p1(23 - 1 downto 0);
    tmp_660_fu_1504_p1 <= p_0_i_i_i5_to_int_fu_1490_p1(23 - 1 downto 0);
    tmp_661_fu_1553_p1 <= p_0_i_i10_to_int_fu_1540_p1(23 - 1 downto 0);
    tmp_662_fu_1612_p1 <= zResid_to_int_fu_1599_p1(23 - 1 downto 0);
    tmp_663_fu_1720_p1 <= p_pn_in_i_reg_967(7 - 1 downto 0);
    tmp_664_fu_1724_p1 <= p_pn_in_i_reg_967(9 - 1 downto 0);
    tmp_665_fu_1748_p1 <= LinearRegression_residuals_data_second_size_s_q0(10 - 1 downto 0);
    tmp_fu_1175_p4 <= LinearRegression_HTP_fu_1171_p1(30 downto 23);
    tmp_i2_fu_1219_p1 <= tmp_neg_i1_fu_1213_p2;
    tmp_i3_fu_1646_p1 <= tmp_neg_i2_fu_1640_p2;
    tmp_i4_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_933),64));
    tmp_i9_fu_1657_p2 <= "1" when (unsigned(i_i_reg_933) < unsigned(temp_7_reg_2123)) else "0";
    tmp_i_42_fu_1587_p1 <= tmp_neg_i_fu_1581_p2;
    tmp_i_fu_1283_p2 <= "1" when (LinearRegression_stubMap_data_second_size_s_q0 = ap_const_lv32_0) else "0";
    tmp_i_i_i4_fu_1477_p1 <= tmp_neg_i_i_i3_fu_1471_p2;
    tmp_i_i_i_fu_1366_p1 <= tmp_neg_i_i_i_fu_1360_p2;
    tmp_neg_i1_fu_1213_p2 <= (ap_const_lv32_80000000 xor LinearRegression_HTP_fu_1171_p1);
    tmp_neg_i2_fu_1640_p2 <= (zResid_to_int_fu_1599_p1 xor ap_const_lv32_80000000);
    tmp_neg_i_fu_1581_p2 <= (p_0_i_i10_to_int_fu_1540_p1 xor ap_const_lv32_80000000);
    tmp_neg_i_i_i3_fu_1471_p2 <= (tmp_163_to_int_fu_1429_p1 xor ap_const_lv32_80000000);
    tmp_neg_i_i_i_fu_1360_p2 <= (tmp_153_to_int_fu_1318_p1 xor ap_const_lv32_80000000);
    tmp_s_fu_1272_p2 <= "1" when (p_begin_0_rec_reg_888 = LinearRegression_stubMap_size_read) else "0";
    zResid_to_int_fu_1599_p1 <= zResid_reg_2204;
end behav;
